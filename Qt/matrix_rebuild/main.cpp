/*
 * Задача 6.6. Преобразовать матрицу A(m, n) так, чтобы строки с нечётными
индексами были упорядочены по убыванию, с чётными — по возрастанию.
В связи с нумерацией строк в C++ с нуля необходимо помнить, что нулевая,
вторая, четвёртая строки упорядочиваются по убыванию, а первая, третья, пятая
и т.д. — по возрастанию. Алгоритм решения этой задачи сводится к тому, что
уже известный нам по предыдущей главе алгоритм упорядочивания элементов
в массиве выполняется для каждой строки матрицы. Блок-схема приведена на
рис. 6.9. Текст программы с комментариями приведён ниже.
*
* (Программирование на языке С++ в среде Qt Creator, стр. 194)
*/



#include <iostream>

using namespace std;

int main()
{

    int i, j, k, N, M;
    double b, **a;

    //Создаем динамичеакую матрицу
    cout << "N = ";
    cin >> N;
    cout << "M = ";
    cin >> M;

    a = new double *[N];
    for(i = 0; i < M; i++)
        a[i] = new double [M];

    //Ввод в матрицу А
    cout << "Ввод матрицы А: " << endl;
    for(i = 0; i < N; i++)
        for(j = 0; j < N; j++)
            cin >> a[i][j];

    //цикл по i - для перебора строк
    for(i = 0; i < M; i++)
        if(i % 2 == 0)  { //если строка чётная
        //упорядочиваем элементы строки по возрастанию
            for(k = 1; k < N; k++)
                for(j = 0; j < N-k; j++)
                    if(a[i][j] > a[i][j+1]) {
                        b = a[i][j];
                        a[i][j] = a[i][j+1];
                        a[i][j+1] = b;
                    }
        }

        else //строка нечётная
             //упорядочиваем элементы по убыванию
            for(k = 1; k < N; k++)
                for(j = 0; j < N-k; j++)
                    if(a[i][j] < a[i][j+1]) {
                        b = a[i][j];
                        a[i][j] = a[i][j+1];
                        a[i][j+1] = b;
                    }

    //Вывод преобразованой матрицы
    cout << "Вывод преобразованной матрицы А: " << endl;
    for(i = 0; i < N, cout << endl; i++)
        for(j = 0; j < M; j++)
            cout << a[i][j] << '\t';

    cout << endl;

    return 0;
}

