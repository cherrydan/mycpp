/*
 * На рис. 6.7 изображён ещё один алгоритм решения данной задачи. В нём про-
верка условия i < j не выполняется, но, тем не менее, в нём так же суммируются
элементы матрицы, находящиеся выше главной диагонали. В нулевой строке за-
данной матрицы необходимо сложить все элементы, начиная с первого. В первой
— все, начиная со второго, в i–й строке процесс начнётся с (i + 1)–го элемента
и так далее. Таким образом, внешний цикл работает от 0 до N − 1, а второй от
i + 1 до M . Авторы надеются, что читатель самостоятельно составит программу,
соответствующую описанному алгоритму.
*/




#include <iostream>

using namespace std;

int main()
{
    int i,j, N, M;
    int a[20][20]; //Статическая матрица 20 на 20
    int s = 0;

    cout << "N= "; //Кол-во строк
    cin >> N;
    cout << "M= "; //Кол-во столбцов
    cin >> M;

    //Ввод в матрицу А
    cout << "Ввод матрицы А: " << endl;

    for(i = 0; i < N; i++)
        for(j = 0; j < M; j++)
            cin >> a[i][j];


    for(i = 0; i < N; i++)
        for(j = i + 1; j < M; j++) //Проходим массив и устанавливаем счетчик второго измерения в i+1
            s += a[i][j];

    cout << "Cумма элементов, лежащих выше главной диагонали: "  << s << endl;

    return 0;
}
